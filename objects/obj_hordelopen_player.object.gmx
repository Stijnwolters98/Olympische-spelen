<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_staanhorde</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variabelen initialiseren
grav = 0.4;
hsp = 0;
vsp = 0;
jumpspeed = 12;
movespeed = 5;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Speler input script

//Bewegings input
rightKey = keyboard_check(vk_right);
jumpKey = keyboard_check_pressed(vk_space);

//Horizontale beweging
if (rightKey and global.gestart == true) {
    hsp = movespeed * rightKey;
    sprite_index = spr_rennen;
} else {
    hsp = 0;
    sprite_index = spr_staanhorde;
}
// om de beurt links en rechts drukken
//if (rightKey and global.gestart == true) {
//rechtgedrukt = 5
//}
//if (leftKey and global.gestart == true) {
//linksgedrukt = 6
//}
//Zwaartekracht
if (vsp &lt;10)
{
    vsp += grav;
} 

//Springen
if (place_meeting(x, y+1, obj_muur) and global.gestart) 
{
    vsp = jumpKey * -jumpspeed;
}

//spring geluid

if (jumpKey == true and place_meeting(x, y+1, obj_muur) == true and global.gestart) {
 audio_play_sound(snd_jump_trampoline_game, 1, false);

}

//applaus geluid

if (jumpKey == true and place_meeting(x, y+1, obj_finishline) == true and global.gestart) {
 audio_play_sound(snd_applaus, 1, false);

}

//Verticale collision
if (place_meeting(x, y+vsp, obj_muur))
{
    while(!place_meeting(x, y+sign(vsp), obj_muur)) //Ookwel, wanneer je in de lucht bent:
    {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;

//Horizontale collision
if (place_meeting(x+hsp, y, obj_muur))
{
    while(!place_meeting(x+sign(hsp), y, obj_muur))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_finishline">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rm_eind_hordelopen_game_score);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hordelopen_horde">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(obj_hordelopen_player.x, obj_hordelopen_player.y, obj_hordelopen_player_vallen);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
