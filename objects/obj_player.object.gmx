<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_stickman_staan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variabelen initialiseren
grav = 0.4;
hsp = 0;
vsp = 0;
jumpspeed = 10;
movespeed = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Speler input script
//Bewegings input
rightKey = keyboard_check(vk_right);
leftKey = -keyboard_check(vk_left);
jumpKey = keyboard_check_pressed(vk_space);

//Trucjes input (Met Q, W, E en R)
truc1Key = keyboard_check(ord('Q'));
truc2Key = keyboard_check(ord('W')); 
truc3Key = keyboard_check(ord('E')); 
truc4Key = keyboard_check(ord('R')); 


//Horizontale beweging
move = rightKey + leftKey
hsp = move * movespeed;

//Zwaartekracht
if (vsp &lt;10)
{
    vsp += grav;
} 

//Springen
if (place_meeting(x, y+1, obj_muur)) 
{
    if (place_meeting(x, y+1, obj_trampoline))
    {
    vsp = jumpKey * -jumpspeed *1.5;   //Sprong op de trampoline
    } else {
    vsp = jumpKey * -jumpspeed; //reguliere sprong
    }
    
}

//Verticale collision
if (place_meeting(x, y+vsp, obj_muur))
{
    while(!place_meeting(x, y+sign(vsp), obj_muur)) //Ookwel, wanneer je in de lucht bent:
    {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;

//Horizontale collision
if (place_meeting(x+hsp, y, obj_muur))
{
    while(!place_meeting(x+sign(hsp), y, obj_muur))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;

/*
Collision werkt ook met de trampoline zonder daarbij speciaal een code te schrijven.
Dit komt omdat obj_trampoline nu de 'child' is van obj_muur, waarbij hij dezelfde voorwaarden
als obj_muur deelt.
*/

//Uitvoeren van de verschillende trucs
//Uitvoeren van truc1 (salto)
if truc1Key
{
    instance_destroy();
    instance_create(x,y, obj_stickman_salto);
}

//Uitvoeren van truc2
if truc2Key
{
    instance_destroy();
    instance_create(x,y, obj_stickman_backflip);
}

//Uitvoeren van truc3
if truc3Key
{
    instance_destroy();
    instance_create(x,y, obj_stickman_pirouette);
}

//Uitvoeren van truc4
if truc4Key
{
    show_message("Mooie truc4 G!");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
